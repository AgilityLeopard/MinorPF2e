name: Test and release

# Run the workflow when a Pull Request is opened or when changes are pushed to main on 'xdy/xdy-pf2e-workbench' (i.e. don't run on forks)
on:
    pull_request:
    push:
        branches: [ main ]

jobs:
    test:
        if: github.repository == 'xdy/xdy-pf2e-workbench'
        runs-on: ubuntu-latest
        strategy:
            matrix:
                # Run the steps below with the following versions of Node.js
                node-version: [ 16.x ]
        steps:
            # Fetch the latest commit
            -   name: Checkout
                uses: actions/checkout@v3
                with:
                    submodules: 'true'

            -   name: Cache node modules
                id:cache-npm
                uses:actions/cache@v3
                env:
                    cache-name:
                        cache-node-modules
                with:
                    # npm cache files are stored in `~/.npm` on Linux/macOS
                    path: ~/.npm
                    key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                    restore-keys: |
                        ${{ runner.os }}-build-${{ env.cache-name }}-
                        ${{ runner.os }}-build-
                        ${{ runner.os }}-


            -   if: ${{ steps.cache-npm.outputs.cache-hit == false }}
                name: List the state of node modules
                continue-on-error: true
                run: npm list

                # Install package dependencies
            -   name: Install
                run: npm install

            # Lint the code
            -   name: Lint
                run: npm run lint

                # Building is the only test right now (mainly tests if dependabot actually can update)
            -   name: Build
                run: npm run build

    release:
        # Only release on push to main on xdy/xdy-pf2e-workbench
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main') && github.repository == 'xdy/xdy-pf2e-workbench'
        runs-on: ubuntu-latest
        # Waits for test jobs for each Node.js version to complete
        needs: [ test ]
        steps:
            -   name: Checkout
                uses: actions/checkout@v3
                with:
                    submodules: 'true'

                # Not sure this is the right way to do it
            -   name: Pull & update submodules recursively
                run: |
                    git submodule update --init --recursive
                    git submodule update --recursive --remote

            -   uses: stefanzweifel/git-auto-commit-action@v4.14.1
                with:
                    commit_message: "chore: Update submodules"

            -   name: Cache node modules
                id:cache-npm
                uses:actions/cache@v3
                env:
                    cache-name:
                        cache-node-modules
                with:
                    # npm cache files are stored in `~/.npm` on Linux/macOS
                    path: ~/.npm
                    key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                    restore-keys: |
                        ${{ runner.os }}-build-${{ env.cache-name }}-
                        ${{ runner.os }}-build-
                        ${{ runner.os }}-

            -   if: ${{ steps.cache-npm.outputs.cache-hit == false }}
                name: List the state of node modules
                continue-on-error: true
                run: npm list

            -   name: Install
                run: npm install

            -   name: Build packs
                run: npm run build:packs

            -   name: Build
                run: npm run build

            -   name: Release
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
                run: npx semantic-release

            -   name: Get tag
                run: echo "WORKBENCH_VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

                # Publish the release to FoundryVTT's package repository
            -   name: Publish to Foundry Admin
                uses: Varriount/fvtt-autopublish@v1.0.6
                with:
                    username: ${{ secrets.FOUNDRY_ADMIN_USERNAME }}
                    password: ${{ secrets.FOUNDRY_ADMIN_PASSWORD }}
                    module-id: 1702
                    manifest-url: https://github.com/xdy/xdy-pf2e-workbench/releases/download/${{ env.WORKBENCH_VERSION }}/module.json
                    manifest-file: module.json
